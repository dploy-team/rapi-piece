import ActorComponent from "./ActorComponent";
export default class ActorNode extends ActorComponent {
    _Children: any[];
    _Transform: any;
    _WorldTransform: any;
    _OverrideWorldTransform: boolean;
    _Constraints: any;
    _PeerConstraints: any;
    _Translation: any;
    _Rotation: number;
    _Scale: any;
    _Opacity: number;
    _RenderOpacity: number;
    _Actor: any;
    _IsCollapsedVisibility: boolean;
    _RenderCollapsed: boolean;
    _Clips: any;
    _Name: string;
    _Parent: any;
    _DirtMask: any;
    constructor();
    hasWorldTransform: boolean;
    eachChildRecursive(cb: any): void;
    all(cb: any): boolean;
    constraints: any;
    allConstraints: any;
    addConstraint(constraint: any): boolean;
    addPeerConstraint(constraint: any): void;
    markTransformDirty(): void;
    updateWorldTransform(): void;
    isNode: boolean;
    translation: any;
    scale: any;
    x: any;
    y: any;
    scaleX: any;
    scaleY: any;
    rotation: number;
    opacity: number;
    update(dirt: any): void;
    getWorldTransform(): any;
    transform: any;
    worldTransform: any;
    worldTranslation: any;
    setCollapsedVisibility(v: any): void;
    makeInstance(resetActor: any): ActorNode;
    copy(node: any, resetActor: any): void;
    overrideWorldTransform(transform: any): void;
    resolveComponentIndices(components: any): void;
}
